<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit_task</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_58872_needit_needit_task">u_payment_type=1^ORu_payment_type=2^EQ<item display_value="Lantern Pay" endquery="false" field="u_payment_type" goto="false" newquery="false" operator="=" or="false" value="1"/>
            <item display_value="Hedgehog" endquery="false" field="u_payment_type" goto="false" newquery="false" operator="=" or="true" value="2"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Stop Workflows for New Records</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var wkfw = new global.Workflow();
	//gs.addInfoMessage(wkfw.hasWorkflow(current));
	// Add your code here
	
	if (wkfw.hasWorkflow(current)){
		//cancel all the workflows, where current is a task record with a workflow context
		wkfw.cancel(current);
		gs.addInfoMessage(gs.getMessage("Workflows for {0} have been cancelled", current.getDisplayValue()));
	}
	else{
		gs.addInfoMessage("No Active Payment Plan Existed Before");
	}
	
	

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-10-21 05:43:26</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>556d357adb60001046e7e04a48961910</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>Stop Workflows for New Records</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_556d357adb60001046e7e04a48961910</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-10-21 06:17:57</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=556d357adb60001046e7e04a48961910"/>
</record_update>
